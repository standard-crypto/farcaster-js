/* tslint:disable */
/* eslint-disable */
/**
 * Farcaster API V2
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { ActiveStatus } from './active-status.js';
// May contain unused imports in some cases
// @ts-ignore
import { UserProfile } from './user-profile.js';
// May contain unused imports in some cases
// @ts-ignore
import { UserViewerContext } from './user-viewer-context.js';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'object': UserObjectEnum;
    /**
     * User identifier (unsigned integer)
     * @type {number}
     * @memberof User
     */
    'fid': number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'username': string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    'display_name': string;
    /**
     * Ethereum address
     * @type {string}
     * @memberof User
     */
    'custody_address'?: string;
    /**
     * The URL of the user\'s profile picture
     * @type {string}
     * @memberof User
     */
    'pfp_url': string;
    /**
     * 
     * @type {UserProfile}
     * @memberof User
     */
    'profile': UserProfile;
    /**
     * The number of followers the user has.
     * @type {number}
     * @memberof User
     */
    'follower_count': number;
    /**
     * The number of users the user is following.
     * @type {number}
     * @memberof User
     */
    'following_count': number;
    /**
     * 
     * @type {Array<string>}
     * @memberof User
     */
    'verifications': Array<string>;
    /**
     * 
     * @type {ActiveStatus}
     * @memberof User
     */
    'activeStatus': ActiveStatus;
    /**
     * 
     * @type {UserViewerContext}
     * @memberof User
     */
    'viewer_context'?: UserViewerContext;
}

/**
    * @export
    * @enum {string}
    */
export enum UserObjectEnum {
    User = 'user'
}


